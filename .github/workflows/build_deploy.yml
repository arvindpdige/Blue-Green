name: Java CI with Maven

on:
  push:
    branches: [ "action" ]
  # pull_request:
  #   branches: [ "main" ]

jobs:

  compile:
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Compile with Maven
      run: mvn compile

  build_test:
    runs-on: ubuntu-latest
    needs: compile
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build_And_Test with Maven
      run: mvn test package -Dmaven.test.failure.ignore=true --file pom.xml
   
    - name: Archive Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: app-jar
        path: target/*.jar
   
  
  securityScan:
    runs-on: self-hosted
    needs: build_test
    steps:
    - uses: actions/checkout@v4
      with:
        # Disabling shallow clones is recommended for improving the relevancy of reporting
        fetch-depth: 0
    # - name: Install GitLeaks
    #   run: |
    #     sudo apt install gitleaks -y
    - name: gitleaks scan
      run: |
        gitleaks detect --source . --report-path gitleaks-report.json || true
    # - name: Install Trivy
    #   run: |
    #     sudo apt-get install -y wget apt-transport-https gnupg lsb-release
    #     wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
    #     echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
    #     sudo apt-get update -y
    #     sudo apt-get install -y trivy
    - name: trivy scan
      run: |
        trivy fs . --format table -o trivy-report.json

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    # - name: Cache SonarQube packages
    #   uses: actions/cache@v4
    #   with:
    #     path: ~/.sonar/cache
    #     key: ${{ runner.os }}-sonar
    #     restore-keys: ${{ runner.os }}-sonar
    # - name: Cache Maven packages
    #   uses: actions/cache@v4
    #   with:
    #     path: ~/.m2
    #     key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
    #     restore-keys: ${{ runner.os }}-m2
    - name: SonarQube Scan
      # uses: SonarSource/sonarqube-scan-action@v5.3.1 # Ex: v4.1.0, See the latest version at https://github.com/marketplace/actions/official-sonarqube-scan
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      run: | 
        mvn -B clean verify \
        org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
        -Dmaven.test.failure.ignore=true \
        -Dsonar.projectKey=blue-green \
        -Dsonar.projectName='blue-green'
    - name: Quality Gate Check
      id: sonarqube-quality-gate-check
      uses: sonarsource/sonarqube-quality-gate-action@master
      with:
        pollingTimeoutSec: 600
        scanMetadataReportFile: target/sonar/report-task.txt
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  Build_docker_image: 
    runs-on: ubuntu-latest
    needs: securityScan
    steps:
    - uses: actions/checkout@v4
    - name: Download Artifacts
      uses: actions/download-artifact@v4
      with:
        name: app-jar
        path: target

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: arvindpdige/bankapp:${{ vars.IMAGE_TAG }}
        file: ./Dockerfile
# Install Trivy & Perform Scan
    - name: Install Trivy
      run: |
        sudo apt-get install -y wget apt-transport-https gnupg lsb-release
        wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
        echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
        sudo apt-get update -y
        sudo apt-get install -y trivy
    - name: trivy scan
      run: |
        trivy image --format json --output bankapp_image_vul.json arvindpdige/bankapp:${{ vars.IMAGE_TAG }}

  deploy:
    runs-on: self-hosted  
    needs: Build_docker_image
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Kubeconfig
      run: |
        echo "${{ secrets.KUBECONFIG }}" > $HOME/.kube/config 
        chmod 600 $HOME/.kube/config
        
    - name: Replace image tag in manifest
      run: |
        sed -i "s|\(image: arvindpdige/bankapp:\).*|\1${IMAGE_TAG}|g" action-deploy.yaml
      env:
        IMAGE_TAG: ${{ vars.IMAGE_TAG }}

    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f action-deploy.yaml -n blue-green
        kubectl get all -n blue-green
      

