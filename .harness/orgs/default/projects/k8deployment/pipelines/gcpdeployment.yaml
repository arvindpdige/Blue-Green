pipeline:
  name: gcp-deployment
  identifier: gcpdeployment
  projectIdentifier: k8deployment
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: gitarvibankapp
        build: <+input>
  stages:
    - stage:
        name: Build
        identifier: Build
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          caching:
            enabled: true
            override: true
            paths: []
          buildIntelligence:
            enabled: true
          infrastructure:
            type: KubernetesDirect
            spec:
              connectorRef: account.gcpconn
              namespace: maven
              automountServiceAccountToken: true
              nodeSelector: {}
              os: Linux
          execution:
            steps:
              - step:
                  type: RestoreCacheGCS
                  name: RestoreCacheGCS
                  identifier: RestoreCacheGCS
                  spec:
                    connectorRef: account.gcpcloudaccountscope
                    bucket: harness-bucket-01
                    key: maven-cache-{{ checksum "pom.xml" }}
                    archiveFormat: Tar
              - step:
                  type: Gitleaks
                  name: Gitleaks
                  identifier: Gitleaks
                  spec:
                    mode: orchestration
                    config: default
                    target:
                      type: repository
                      workspace: ./
                      detection: auto
                    advanced:
                      log:
                        level: info
                      fail_on_severity: none
              - step:
                  type: Run
                  name: Artifact_Build
                  identifier: Artifact_Build
                  spec:
                    connectorRef: account.Dockerhub
                    image: maven:3-openjdk-17
                    envVariables:
                      MAVEN_OPTS: "-Dmaven.repo.local=/harness/.m2/repository"
                    shell: Sh
                    command: |-
                      mvn -v
                      mvn clean compile install package -Dmaven.test.failure.ignore=true


                      ls -lrth /harness/target/
                    imagePullPolicy: IfNotPresent
              - step:
                  type: GCSUpload
                  name: GCSUpload
                  identifier: GCSUpload
                  spec:
                    connectorRef: account.gcpcloudaccountscope
                    bucket: harness-bucket-01
                    sourcePath: target/bankapp-0.0.1-SNAPSHOT.jar
                    target: Bankapp/
              - step:
                  type: BuildAndPushGAR
                  name: BuildAndPushGAR
                  identifier: BuildAndPushGAR
                  spec:
                    connectorRef: account.gcpcloudaccountscope
                    host: asia-south1-docker.pkg.dev
                    projectID: harness-475313/gcp-docker-reg
                    imageName: bankapp
                    tags:
                      - <+pipeline.variables.TAG>
                    caching: true
              - step:
                  type: SaveCacheGCS
                  name: SaveCacheGCS
                  identifier: SaveCacheGCS
                  spec:
                    connectorRef: account.gcpcloudaccountscope
                    bucket: harness-bucket-01
                    key: maven-cache-{{ checksum "pom.xml" }}
                    sourcePaths:
                      - /harness/.m2/repository
                    archiveFormat: Tar
          sharedPaths:
            - /harness/.m2/repository/
    - stage:
        name: canary
        identifier: canary
        description: ""
        type: Deployment
        spec:
          deploymentType: Kubernetes
          service:
            serviceRef: bankapp_service
          environment:
            environmentRef: account.gke
            deployToAll: false
            infrastructureDefinitions:
              - identifier: gkeinfra
                inputs:
                  identifier: gkeinfra
                  type: KubernetesGcp
                  spec:
                    namespace: <+input>
          execution:
            steps:
              - stepGroup:
                  name: Canary Deployment
                  identifier: canaryDeployment
                  steps:
                    - step:
                        name: Canary Deployment
                        identifier: canaryDeployment
                        type: K8sCanaryDeploy
                        timeout: 10m
                        spec:
                          instanceSelection:
                            spec:
                              percentage: 50
                            type: Percentage
                          skipDryRun: false
                    - step:
                        type: HarnessApproval
                        name: HarnessApproval
                        identifier: HarnessApproval_1
                        spec:
                          approvalMessage: Deploy all instances with newer version
                          includePipelineExecutionHistory: true
                          isAutoRejectEnabled: false
                          approvers:
                            userGroups:
                              - account._account_all_users
                            minimumCount: 1
                            disallowPipelineExecutor: false
                          approverInputs: []
                        timeout: 1d
                    - step:
                        type: K8sCanaryDeploy
                        name: K8sCanaryDeploy_1
                        identifier: K8sCanaryDeploy_1
                        spec:
                          skipDryRun: false
                          instanceSelection:
                            spec:
                              percentage: 100
                            type: Percentage
                        timeout: 10m
                    - step:
                        name: Canary Delete
                        identifier: canaryDelete
                        type: K8sCanaryDelete
                        timeout: 10m
                        spec: {}
              - stepGroup:
                  name: Primary Deployment
                  identifier: primaryDeployment
                  steps:
                    - step:
                        name: Rolling Deployment
                        identifier: rollingDeployment
                        type: K8sRollingDeploy
                        timeout: 10m
                        spec:
                          skipDryRun: false
            rollbackSteps:
              - step:
                  name: Canary Delete
                  identifier: rollbackCanaryDelete
                  type: K8sCanaryDelete
                  timeout: 10m
                  spec: {}
              - step:
                  name: Rolling Rollback
                  identifier: rollingRollback
                  type: K8sRollingRollback
                  timeout: 10m
                  spec: {}
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
  variables:
    - name: TAG
      type: String
      description: ""
      required: true
      value: <+input>
    - name: ns
      type: String
      description: ""
      required: true
      value: default
